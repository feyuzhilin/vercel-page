import{s as h,l as y,c}from"./index.ac2cf653.js";const d=[1,2,4,8,16,32],f=[0,1,2,3,4,5];async function m(t){var e,a;if(t.done)return;h.attach(this.outerObject3d);const{slipperyMaterial:l,defaultMaterial:p,world:r,Body:u,Vec3:n}=await y();if(t.done)return;const s=this.cannonBody=new u({mass:(e=this._mass)!=null?e:1,material:this._slippery?l:p,collisionFilterGroup:d[(a=this._physicsGroup)!=null?a:0],collisionFilterMask:f.filter(i=>{var o;return!((o=this._ignorePhysicsGroups)!=null&&o.includes(i))}).map(i=>d[i]).reduce((i,o)=>i+o,0)});await this.physicsShape(),!t.done&&(this._physics==="2d"&&(s.angularFactor=new n(0,0,1),s.linearFactor=new n(1,1,0)),this._noTumble&&(s.angularFactor=new n(0,0,0)),s.position.copy(this.outerObject3d.position),s.quaternion.copy(this.outerObject3d.quaternion),this.physicsUpdate={},r.addBody(s),c.add(this),t.then(()=>{r.removeBody(s),c.delete(this),this.cannonBody=void 0,this.physicsUpdate=void 0}))}export{m as default};
